// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para o status do Pet
enum StatusPet {
  DISPONIVEL
  ADOTADO
}

// Enums para filtro avançado
enum TamanhoPet {
  PEQUENO
  MEDIO
  GRANDE
}

enum PersonalidadePet {
  CALMO
  BRINCALHAO
  INDEPENDENTE
}

// Enum para definir os papéis do usuário
enum Role {
  USER
  ADMIN
}

// Modelo para os Pets
model Pet {
  pet_id              Int        @id @default(autoincrement())
  nome            String
  especie         String
  data_nascimento DateTime?  @db.Date
  descricao       String?
  status          StatusPet  @default(DISPONIVEL)
  adocao          Adocao?
  tamanho         TamanhoPet?
  personalidade   PersonalidadePet?
  imagem_url1     String?
  imagem_url2     String?
}

// Modelo para os Adotantes
model Adotante {
  adotante_id       Int      @id @default(autoincrement())
  nome     String
  email    String   @unique
  telefone String
  
  // Endereço está em campos compostos
  rua      String
  numero   String? // Opcional, pois pode não ter número
  bairro   String
  cidade   String
  uf       String   @db.VarChar(2) // Limita a 2 caracteres, ex: "DF"

  adocoes  Adocao[]

  senha    String
  role     Role     @default(USER) // USER como padrão
}

// Modelo para as Adoções
model Adocao {
  adocao_id          Int      @id @default(autoincrement())
  data_adocao DateTime @default(now()) @db.Date
  pet_id      Int      @unique // Garante que um pet só pode ser adotado uma vez
  adotante_id Int

  pet      Pet      @relation(fields: [pet_id], references: [pet_id])
  adotante Adotante @relation(fields: [adotante_id], references: [adotante_id])
}